<script type="text/javascript" src="~/Scripts/time.js"></script>
<link rel="stylesheet" href="~/Content/calendar.css">

@{
    ViewBag.Title = "About";
}
<h2>@ViewBag.Title.</h2>
<font size="6">
    <div id="czas" onclick="javascript:odswiez();"> 


        <script>
        // Nazwy miesięcy
        var nazwy_mies = ['January', 'February', 'March', 'April', 'May',
        'June', 'July', 'August', 'September', 'October',
        'November', 'December'];

        // Odczytanie bieżącej daty i czasu, i rozbicie ich na składowe
        var data = new Date();
        var rok = data.getFullYear();
        var mies = data.getMonth();
        var dzien = data.getDate();
        var godz = data.getHours();
        var min = data.getMinutes();
        var sec = data.getSeconds();

        // Dodanie zera na początku minut i sekund jeżeli trzeba
        if (godz < 10)
        godz = '0' + godz;
        if (min < 10)
        min = '0' + min;
        if (sec < 10)
        sec = '0' + sec;

        // Utworzenie odpowiednio sformatowanej daty i czasu
        var data_i_czas = dzien + ' ' + nazwy_mies[mies] + ' ' + rok
        + ', ' + godz + ':' + min + ':' + sec;
        document.write(data_i_czas);

        </script>



    </div>
</font>  <!-- zegarek ****************************** -->

<h2>Application supporting time management</h2>

<p>We are helping with remembering about the important date, actions and some other thing people are doing. </p>







<p class="demo7">
    <input type="text" class="input-demo7">
    <span class="demo7-text"></span>
</p>

<p>
    <input type="text" class="input-demo6" style="display:none;">
</p>






<script>
(function() {
    function Calendar(input, options) {
        this.now = new Date();
        this.day = this.now.getDate();
        this.month = this.now.getMonth();
        this.year = this.now.getFullYear();
        this.input = input;
        this.divCnt = null;
        this.divTable = null;
        this.divDateText = null;
        this.divButtons = null;

        const defaultOptions = {
            closeOnSelect : false,
            onDateSelect : function(day, month, year) {
                const monthText = ((month + 1) < 10) ? "0" + (month + 1) : month + 1;
                const dayText =  (day < 10) ? "0" + day : day;
                this.input.value = dayText + '-' + monthText + '-' + this.year;
            }.bind(this)
        }
        this.options = Object.assign({}, defaultOptions, options);

        this.createDateText = function () {
            const monthNames = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];

            //tworzymy nazwę miesiąca

            this.divDateText.innerHTML = monthNames[this.month] + ' ' + this.year; //czyscimy zawartosc diva
        };

        //metoda tworząca guziczki
        this.createButtons = function () {
            const buttonPrev = document.createElement('button');
            buttonPrev.innerText = '<';
            buttonPrev.type = "button";
            buttonPrev.classList.add('input-prev');
            buttonPrev.addEventListener('click', function () {
                this.month--;
                if (this.month < 0) {
                    this.month = 11;
                    this.year--;
                }
                this.createCalendarTable();
                this.createDateText();
            }.bind(this));
            this.divButtons.appendChild(buttonPrev);

            const buttonNext = document.createElement('button');
            buttonNext.classList.add('input-next');
            buttonNext.innerText = '>';
            buttonNext.type = "button";
            buttonNext.addEventListener('click', function () {
                this.month++;
                if (this.month > 11) {
                    this.month = 0;
                    this.year++;
                }
                this.createCalendarTable();
                this.createDateText();
            }.bind(this));
            this.divButtons.appendChild(buttonNext);
        };

        this.bindTableDaysEvent = function() {
            this.divTable.addEventListener('click', function(e) {

                if (e.target.tagName.toLowerCase() === 'td' && e.target.classList.contains('day')) {
                    if (this.options.closeOnSelect) {
                        this.hide();
                    }
                    this.options.onDateSelect(e.target.dayNr, this.month + 1, this.year);
                }

            }.bind(this));
        };

        //metoda tworzaca tabele z kalendarzem
        this.createCalendarTable = function () {
            this.divTable.innerHTML = '';

            //tworzymy nazwy dni
            const tab = document.createElement('table');
            tab.classList.add('calendar-table');

            //tworzymy naglowki dni
            let tr = document.createElement('tr');
            tr.classList.add('calendar-table-days-names')
            const days = ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun'];
            for (let i=0; i<days.length; i++) {
                const th = document.createElement('th');
                th.innerHTML = days[i];
                tr.appendChild(th);
            }
            tab.appendChild(tr);

            //tworzymy rzędy dni
            const daysInMonth = new Date(this.year, this.month+1, 0).getDate();

            const tempDate = new Date(this.year, this.month, 1);
            let firstMonthDay = tempDate.getDay();

            if (firstMonthDay === 0) {
                firstMonthDay = 7;
            }

            const j = daysInMonth + firstMonthDay - 1;

            if (firstMonthDay - 1 !== 0) {
                tr = document.createElement('tr');
                tab.appendChild(tr);
            }

            for (let i=0; i < firstMonthDay - 1; i++) {
                const td = document.createElement('td');
                td.innerHTML = '';
                tr.appendChild(td);
            }

            for (let i = firstMonthDay-1; i<j; i++) {
                if((i % 7) == 0){
                    tr = document.createElement('tr');
                    tab.appendChild(tr);
                }

                const td = document.createElement('td');
                td.innerText = i - firstMonthDay + 2;
                td.dayNr = i - firstMonthDay + 2;
                td.classList.add('day');

                if (this.year === this.now.getFullYear() && this.month === this.now.getMonth() && this.day === i - firstMonthDay + 2) {
                    td.classList.add('current-day')
                }

                tr.appendChild(td);
            }

            tab.appendChild(tr);

            this.divTable.appendChild(tab);
        };

        this.toggleShow = function() {
            this.divCnt.classList.toggle('calendar-show');
        }

        this.show = function() {
            this.divCnt.classList.add('calendar-show');
        }

        this.hide = function() {
            this.divCnt.classList.remove('calendar-show');
        }

        //metoda inicjujaca obiekt
        this.init = function () {
            //tworzymy div z całą zawartością
            this.divCnt = document.createElement('div');
            this.divCnt.classList.add('calendar');

            //tworzymy wrapper dla input
            this.calendarWrapper = document.createElement('div');
            this.calendarWrapper.classList.add('input-calendar-cnt');
            this.input.parentElement.insertBefore(this.calendarWrapper, this.input);
            this.calendarWrapper.appendChild(this.input);

            //tworzymy div z guzikami
            this.divButtons = document.createElement('div');
            this.divButtons.className = "calendar-prev-next";
            this.createButtons();

            //tworzymy div z nazwą miesiąca
            this.divDateText = document.createElement('div');
            this.divDateText.className = 'date-name';

            this.divHeader = document.createElement('div');
            this.divHeader.classList.add('calendar-header');

            this.divHeader.appendChild(this.divButtons);
            this.divHeader.appendChild(this.divDateText);
            this.divCnt.appendChild(this.divHeader);
            this.createDateText();

            //tworzymy div z tabelą.calendara
            this.divTable = document.createElement('div');
            this.divTable.className = 'calendar-table-cnt';
            this.divCnt.appendChild(this.divTable);
            this.createCalendarTable();
            this.bindTableDaysEvent();

            this.input.classList.add('input-calendar');
            this.input.addEventListener('click', function() {
                this.toggleShow();
            }.bind(this));


            this.input.addEventListener('click', function(e) {
                e.stopImmediatePropagation();
            });
            this.divCnt.addEventListener('click', function(e) {
                e.stopImmediatePropagation();
            });

            document.addEventListener('click', function() {
                this.hide();
            }.bind(this));

            //nasz div z zawartością wrzucamy na koniec body
            this.calendarWrapper.appendChild(this.divCnt);
        };
    };

    //metoda dla inputwo - zamienia inputy na kalendarzowe
    const inp1 = document.querySelector('.input-demo6');
    //dla 1 inputa wyłączam tylko zamykanie przy wyborze daty
    const opt1 = {
        closeOnSelect : false
    }
    const cal1 = new Calendar(inp1, opt1);
    cal1.init();


    const inp2 = document.querySelector('.input-demo7');
    //dla 2 inputa nadpisuję tylko akcję po wyborze daty
    const opt2 = {
        closeOnSelect : true,
        onDateSelect : function(day, month, year) {
            const dayText = (day < 10) ? '0' + day : day;
            const monthText = (month < 10) ? '0' + month : month;

            const date = dayText + ' / ' + monthText + ' / ' + year;
            document.querySelector('.demo7-text').innerHTML = 'You have chosen the date: <strong>' + date + '</strong>';
            inp2.value = date;
        }
    }
    const cal2 = new Calendar(inp2, opt2);
    cal2.init();
})();
</script>